# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-08-27 18:47
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter Category Name', max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(help_text='Enter Item Name', max_length=200)),
                ('size', models.CharField(blank=True, help_text='Enter Item Size', max_length=100, null=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('date_expiry', models.DateField(help_text='Enter Expiry Date of Item')),
                ('quantity_in_units', models.IntegerField(help_text="Enter Item's Quantities in Units")),
                ('price_per_unit', models.IntegerField(help_text="Enter Price for each Item's Unit")),
                ('status', models.CharField(choices=[('a', 'Available'), ('u', 'Unavailable'), ('e', 'Expired')], default='a', help_text="Select Item's Status", max_length=1)),
                ('category', models.ForeignKey(help_text='Select/Create Item Category', on_delete=django.db.models.deletion.CASCADE, to='stock.Category')),
            ],
            options={
                'ordering': ['status'],
            },
        ),
        migrations.CreateModel(
            name='ItemI18n',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=164, verbose_name='Name i18n')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.Item')),
            ],
            options={
                'verbose_name_plural': 'Items i18n',
                'verbose_name': 'Item i18n',
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter Manufacturer Name', max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Manufacturers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter Section Name', max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Section',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='item',
            name='manufacturer',
            field=models.ForeignKey(help_text='Select/Create Item Manufacturer', on_delete=django.db.models.deletion.CASCADE, to='stock.Manufacturer'),
        ),
        migrations.AddField(
            model_name='item',
            name='section',
            field=models.ForeignKey(blank=True, help_text='Select/Create Item Drug Section', null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.Section'),
        ),
        migrations.CreateModel(
            name='ItemProxy',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Items',
                'indexes': [],
                'proxy': True,
                'verbose_name': 'Items',
            },
            bases=('stock.item',),
        ),
    ]
